apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.1.0'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.2.0-alpha06'
    api "androidx.viewpager2:viewpager2:1.0.0"

    //kotlin
    api "androidx.core:core-ktx:1.2.0"
    api "androidx.fragment:fragment-ktx:1.2.4"

    //lifecycle
    def lifecycle_version = "2.2.0"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    api 'com.squareup.picasso:picasso:2.71828'
    api "com.squareup.moshi:moshi:1.8.0"
    api "com.squareup.moshi:moshi-kotlin:1.8.0"

    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"

    api "io.reactivex.rxjava2:rxjava:2.2.9"
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'


    api "com.squareup.retrofit2:retrofit:2.6.0"
    api "com.squareup.okhttp3:okhttp:3.14.2"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.4.0")
    api("com.squareup.okio:okio:2.5.0")
    api('com.squareup.retrofit2:converter-gson:2.3.0') {
        exclude module: 'jsr305'
    }
    api "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    api 'com.squareup.retrofit2:converter-moshi:2.6.0'
    api 'com.squareup.retrofit2:converter-scalars:2.3.0'
    api "com.squareup.retrofit2:retrofit-mock:2.3.0"
    api "com.squareup.okhttp3:logging-interceptor:3.12.1"

    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "androidx.benchmark:benchmark-junit4:1.0.0"
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main
final def log = project.logger
final def variants = project.android.libraryVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}
